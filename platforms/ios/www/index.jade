extends layout

block content
	div(style='margin-top: 50px; margin-left: 50px;')
		img(src="./img/sciencekit-logo.png", alt="sciencekit logo")

	div(id="host-settings", style="display: table; width: 100%;")
		p(style='margin: 4px 40px 4px 40px; font-size: 35px; color: #444444;')
			| where's the story?
		p(style='margin: 4px 40px 4px 40px; font-size: 18px; color: #777777;')
			| 1. enter sciencekit server address<br />
			| 2. touch the green checkmark to proceed

		div(style="display: table-row;")

			div(style="display: table-cell; position: relative; z-index: 0; width: 100%;")

				div(class="text-input-widget", style="margin: 4px 40px 4px 40px;")
					div(class="element-table", style="display: table; width: 100%;")

							div(class="element", style="display: table-row;")
								div(class="text", style="display: table-cell; min-width: 100%; vertical-align: middle;")
									input(type='text', id='hostAddressInput', style="font-size: 35px;")

								div(class="options", style="width: 75px; display: table-cell; text-align: right; vertical-align: middle;")
									img(id="hostAddressSave", src="./img/check.png", style="display: none;")
									img(id="hostAddressInvalid", src="./img/cross-red.png", style="display: none;")

	div(id="authorize", style="display: none;")
		p(class='login-step')
			a(href="javascript:void(0);", onclick="openInAppBrowser();") connect

	script
		window.onload = function() {

			// DEBUG: Hack for Kidsteam
			//$('#hostAddressInput').val('http://129.2.101.49:3000'); // Development/Test
			//$('#hostAddressInput').val('http://129.2.101.49:3001'); // Kidsteam Session 1
			//$('#hostAddressInput').val('http://129.2.101.49:3002'); // Sci-dentity
			$('#hostAddressInput').val('http://10.109.81.99:3000');
			updateAddressInput();

			// Reset localStorage
			// localStorage['timelineStack'] = {};

			//
			// Set up GUI
			//

			$('#hostAddressInput').change(function(event) {
				updateAddressInput();
			});

			$('#hostAddressInput').keyup(function(event) {
				updateAddressInput();
			});

			$('#hostAddressSave').click(function() {
				saveHostAddress();
			});
		}

		function updateAddressInput() {
			// TODO: Check if input matches regular expression
			var hostAddress = $('input[id=hostAddressInput]').val();

			// Matches URIs that contain a protocol, subdomain, domain, IP address, port number, path name or file name
			var addressRegExp = /\b((([hH][tT][tT][pP][sS]?|[fF][tT][pP])\:\/\/)?([\w\.\-]+(\:[\w\.\&%\$\-]+)*@)?((([^\s\(\)\<\>\\\"\.\[\]\,@;:]+)(\.[^\s\(\)\<\>\\\"\.\[\]\,@;:]+)*(\.[a-zA-Z]{2,4}))|((([01]?\d{1,2}|2[0-4]\d|25[0-5])\.){3}([01]?\d{1,2}|2[0-4]\d|25[0-5])))(\b\:(6553[0-5]|655[0-2]\d|65[0-4]\d{2}|6[0-4]\d{3}|[1-5]\d{4}|[1-9]\d{0,3}|0)\b)?((\/[^\/][\w\.\,\?\'\\\/\+&%\$#\=~_\-@]*)*[^\.\,\?\"\'\(\)\[\]!;<>{}\s\x7F-\xFF])?)\b/;

			if (hostAddress.match(addressRegExp) !== null) {
				console.log(hostAddress);

				// TODO: Send "ack" request to host at valid hostAddress, then continue if it responds with an "ack" of being a ScienceKit host.

				$('#hostAddressInvalid').hide(function() {
					$('#hostAddressSave').fadeIn(function() {

						// TODO: Add delay here...

						//saveHostAddress();

					});
				});;

			} else {

				// Host address is not valid, show visual feedback
				if ($('#hostAddressSave').is(":visible")) {
					$('#hostAddressSave').hide(0, function() {
						$('#hostAddressInvalid').show(0, function() {
							$('#hostAddressInvalid').fadeOut();
						});
					});
				}
			}
		}

		function saveHostAddress() {
			var hostAddress = $('input[id=hostAddressInput]').val();
			localStorage['host'] = hostAddress;
			console.log('Stored address: ' + hostAddress);

			// Update GUI
			$('#host-settings').fadeOut('fast', function() {
				saveClientProfile();
			});
		}

		function saveClientProfile() {
			// TODO: Get client_id and client_secret from server
			localStorage['client_id'] = 'abc123';
			localStorage['client_secret'] = 'ssh-secret';

			openInAppBrowser();
		}

		//delete localStorage['host'];
		//delete localStorage['client_id'];
		//delete localStorage['client_secret'];
		//delete localStorage['token'];

		function updateGui() {
			if(!localStorage['host']) {

				$('#host-settings').show();

			} else if(!localStorage['client_id'] || !localStorage['client_secret']) {

				// TODO: Get client_id and client_secret from server
				localStorage['client_id'] = 'abc123';
				localStorage['client_secret'] = 'ssh-secret';

				updateGui();

			} else if(!localStorage['token']) {

				$('#authorize').fadeIn();

			} else {

				console.log('OAuth2 token exists.  Loading timeline.');
				$(location).attr('href', './timeline.html');
			}
		}

		//
		// Determine initial state of GUI
		//

		function verifyServer() {
			if (localStorage['host'] !== undefined && localStorage['host'] !== null) {
				$.ajax({
					type: 'GET',
					url: localStorage['host'] + '/api/status',
					dataType: 'json',
					timeout: 4000,
					success: function(data) {

						// Success
						updateGui();
					},
					error: function(x, t, m) {

						delete localStorage['host'];
						updateGui();
					},
				});
			}
		}

		verifyServer();

		// host
		// client_id
		// client_secret
		// token